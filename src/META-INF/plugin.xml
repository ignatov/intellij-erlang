<idea-plugin url="http://ignatov.github.com/intellij-erlang" version="2">
    <id>org.jetbrains.erlang</id>
    <version>0.4.5</version>
    <vendor email="sergey.ignatov@jetbrains.com" logo="">Sergey Ignatov</vendor>
    <idea-version since-build="129.290" until-build="129.9999"/>
    <depends>com.intellij.modules.lang</depends>

    <depends optional="true" config-file="erlang-copyright.xml">com.intellij.copyright</depends>

    <name>Erlang</name>
    <description>Erlang plugin</description>
    <change-notes>
        <![CDATA[
            <p>0.4.5</p>
            <ul>
              <li>Comment based injection</li>
              <li>Dialyzer integration (experimental)</li>
              <li>Introduce variable and function quickfixes</li>
              <li>Faster module completion</li>
              <li>Better auto indentation for some cases</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.4.4</p>
            <ul>
              <li>Bugfixes</li>
            </ul>
            <p>0.4.3</p>
            <ul>
              <li>Bugfixes</li>
            </ul>
            <p>0.4.2</p>
            <ul>
              <li>IntelliJ IDEA 12.1 compatibility</li>
              <li>Erlang console run configuration</li>
              <li>Settings for Emacs executable path and Emacs-based formatter action a little bit reworked</li>
              <li>Behaviour line marker provider</li>
              <li>Implement all callbacks quickfix</li>
              <li>Better resolve for variables</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.4.1</p>
            <ul>
              <li>External (Shift+F1) and local (Ctrl+Q) help for OTP types (except for built-in)</li>
              <li>Links in local OTP documentation to other OTP modules, functions, and types were fixed</li>
              <li>Function parameter help (Ctrl+P) for BIF was fixed</li>
              <li>Unresolved function inspection added</li>
              <li>Better autodetection for Erlang SDK under Mac OS X</li>
              <li>Better local function completion (#182)</li>
              <li>Support for R16A and R16B</li>
              <li>Emacs-based formatter action (Ctrl+Alt+Shift+E) (Experimental)</li>
              <li>Smart typed handler for function and case clauses</li>
              <li>Highlighting settings for function declarations, types and specs (thanks to Marcus Nilsson)</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.4</p>
            <ul>
              <li>Rebar run configurations (thanks to Maxim Vladimirsky)</li>
              <li>Rebar-based Eunit integration</li>
              <li>Eunit integration improvements</li>
              <li>Erlang types support: completion (includes built-in types), rename and find usages for user defined types, export type quick fix and intention</li>
              <li>External (Shift + F1) and local (Ctrl + Q) documentation for OTP functions and modules (thanks to Maxim Vladimirsky)</li>
              <li>Function parameter info context help (Ctrl + P)</li>
              <li>Upgraded structure view (shows exported and inner functions)</li>
              <li>Go to action for Erlang symbols: functions, records, types and macroses (Ctrl + Alt + Shift + N)</li>
              <li>Improved BIFs completion (includes BIFs from OTP modules), for example lists:member/2</li>
              <li>Special highlighting type for atoms and macroses (thanks to Sergey Evstifeev)</li>
              <li>Format inspection (for io:format(), io:fwrite() and io_lib:format() functions calls)</li>
              <li>Inplace rename (without popup dialog) for all entities</li>
              <li>Head mismatch inspection and quick fix</li>
              <li>Formatter improvements</li>
              <li>Folding builder for functions</li>
              <li>Custom Erlang spelling dictionary for well-known words</li>
              <li>Support for export_all compile directive</li>
              <li>Safe delete functions improvement</li>
              <li>Export function and type intentions</li>
              <li>Better Darcula support</li>
              <li>Parser improvements, also includes support for Nitrogen web framework</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.3.5:</p>
            <ul>
              <li>Extract variable refactoring</li>
              <li>New compiler mode (thanks to Nikolay Chashnikov)</li>
              <li>Rebar importer (thanks to Maxim Vladimirsky)</li>
              <li>IntelliJ IDEA 12 compatibility</li>
            </ul>
            <p>0.3.4:</p>
            <ul>
              <li>Eunit test runner</li>
              <li>Tests/sources switcher (Ctrl + Shift + T)</li>
              <li>Copyright plugin support (thanks to Maxim Vladimirsky)</li>
              <li>Recursive icon on the gutter</li>
              <li>Better completion</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.3.3:</p>
            <ul>
              <li>Rebuild with Java 1.6</li>
            </ul>
            <p>0.3.2:</p>
            <ul>
              <li>New quickfixes: export function, introduce record, introduce record field</li>
              <li>Multi-reference for functions: ability to go to the function definition with mismatched arity</li>
              <li>Better parsing, highlighting, completion and formatting</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.3.1:</p>
            <ul>
              <li>New fast parsing</li>
              <li>Highlighting for .config and .rebar files</li>
              <li>Live templates</li>
              <li>New icons</li>
              <li>Formatter impovement</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.3:</p>
            <ul>
              <li>Better completion</li>
              <li>Record fields support</li>
              <li>Formatter impovement</li>
              <li>New file templates for 'New File' action</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.2.5:</p>
            <ul>
              <li>Compilation and run (experimental)</li>
              <li>Macros support</li>
            </ul>
            <p>0.2:</p>
            <ul>
              <li>Erlang SDK</li>
              <li>Autocompletion for BIFs</li>
              <li>Creating project from scratch or existing sources</li>
              <li>Color setting page</li>
              <li>New inspections: unused functions and variables, duplicated functions</li>
              <li>Quick fix for incorrect module name</li>
              <li>'New File From Template' action</li>
              <li>Bugfixes</li>
            </ul>
            <p>0.1:</p>
            <ul>
              <li>Syntax and errors highlighting</li>
              <li>References resolving</li>
              <li>Code completion for functions, records and variables</li>
              <li>Keyword code completion</li>
              <li>Rename refactoring for modules, functions, records and variables</li>
              <li>Safe delete refactoring</li>
              <li>Structure view</li>
              <li>Find usages</li>
              <li>Code commenting/uncommenting</li>
              <li>Brace matching</li>
              <li>Basic code formatter</li>
            </ul>
        ]]>
    </change-notes>

    <depends optional="true" config-file="rebar-import.xml">com.intellij.modules.java</depends>

    <!--Rebar related extensions -->
    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable instance="org.intellij.erlang.settings.ErlangExternalToolsConfigurable"/>
        <projectService serviceImplementation="org.intellij.erlang.rebar.settings.RebarSettings"/>
        <configurationType implementation="org.intellij.erlang.rebar.runner.RebarRunConfigurationType"/>
        <configurationType implementation="org.intellij.erlang.rebar.runner.RebarEunitRunConfigurationType"/>
        <programRunner implementation="org.intellij.erlang.rebar.runner.RebarRunner"/>
        <configurationProducer implementation="org.intellij.erlang.rebar.runner.RebarEunitConfigurationProducer"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <facetType implementation="org.intellij.erlang.facet.ErlangFacetType"/>

        <internalFileTemplate name="Erlang Module"/>
        <internalFileTemplate name="Erlang Header"/>
        <internalFileTemplate name="Erlang EUnit Tests"/>
        <internalFileTemplate name="Erlang Application"/>
        <internalFileTemplate name="Erlang Application Resource File"/>
        <internalFileTemplate name="Erlang Supervisor"/>
        <internalFileTemplate name="Erlang Gen Server"/>
        <internalFileTemplate name="Erlang Gen FSM"/>
        <internalFileTemplate name="Erlang Gen Event"/>

        <defaultLiveTemplatesProvider implementation="org.intellij.erlang.template.ErlangLiveTemplateProvider"/>
        <liveTemplateContext implementation="org.intellij.erlang.template.ErlangContextType$Generic"/>
        <liveTemplateContext implementation="org.intellij.erlang.template.ErlangContextType$Declaration"/>
        <liveTemplateContext implementation="org.intellij.erlang.template.ErlangContextType$Statement"/>
        <liveTemplateContext implementation="org.intellij.erlang.template.ErlangContextType$Expression"/>

        <moduleType id="ERLANG_MODULE" implementationClass="org.intellij.erlang.editor.ErlangModuleType"/>
        <projectStructureDetector implementation="org.intellij.erlang.editor.ErlangProjectStructureDetector"/>

        <!-- emacs -->
        <projectService serviceImplementation="org.intellij.erlang.emacs.EmacsSettings"/>
        <!-- dialyzer -->
        <projectService serviceImplementation="org.intellij.erlang.dialyzer.DialyzerSettings"/>

        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
        <lang.formatter language="Erlang" implementationClass="org.intellij.erlang.formatter.ErlangFormattingModelBuilder"/>
        <fileTypeFactory implementation="org.intellij.erlang.ErlangFileTypeFactory"/>
        <iconProvider implementation="org.intellij.erlang.ErlangIconProvider"/>
        <updateAddedFileProcessor implementation="org.intellij.erlang.ErlangUpdateAddedFileProcessor"/>
        <lang.findUsagesProvider language="Erlang" implementationClass="org.intellij.erlang.ErlangFindUsagesProvider"/>
        <elementDescriptionProvider implementation="org.intellij.erlang.ErlangDescriptionProvider"/>
        <lang.parserDefinition language="Erlang" implementationClass="org.intellij.erlang.ErlangParserDefinition"/>
        <lang.ast.factory language="Erlang" implementationClass="org.intellij.erlang.psi.impl.ErlangASTFactory"/>
        <annotator language="Erlang" implementationClass="org.intellij.erlang.editor.ErlangAnnotator"/>
        <lang.syntaxHighlighterFactory key="Erlang" implementationClass="org.intellij.erlang.editor.ErlangSyntaxHighlighterFactory"/>
        <lang.braceMatcher language="Erlang" implementationClass="org.intellij.erlang.ErlangBraceMatcher"/>
        <lang.commenter language="Erlang" implementationClass="org.intellij.erlang.ErlangCommenter"/>
        <lang.psiStructureViewFactory language="Erlang" implementationClass="org.intellij.erlang.ErlangStructureViewFactory"/>
        <lang.refactoringSupport language="Erlang" implementationClass="org.intellij.erlang.refactor.ErlangRefactoringSupportProvider"/>
        <completion.contributor language="Erlang" implementationClass="org.intellij.erlang.ErlangCompletionContributor"/>
        <renameInputValidator implementation="org.intellij.erlang.ErlangRenameInputValidator"/>

        <inlineActionHandler implementation="org.intellij.erlang.ErlangInlineVariableHandler"/>

        <quoteHandler fileType="Erlang" className="org.intellij.erlang.ErlangQuoteHandler"/>
        <typedHandler implementation="org.intellij.erlang.editor.ErlangBinaryTypedHandler" id="ErlangBinary"/>
        <enterHandlerDelegate implementation="org.intellij.erlang.editor.ErlangEnterHandler" id="ErlangEnter"/>

        <lang.smartEnterProcessor language="Erlang" implementationClass="org.intellij.erlang.editor.ErlangClausesSmartEnterProcessor" id="ErlangClause"/>
        <lang.elementManipulator forClass="org.intellij.erlang.psi.impl.ErlangStringLiteralImpl"
                                 implementationClass="org.intellij.erlang.editor.ErlangStringManipulator"/>
        <lang.elementManipulator forClass="org.intellij.erlang.psi.impl.ErlangASTFactory$ErlangCommentImpl" order="first"
                                 implementationClass="org.intellij.erlang.editor.ExtendedPsiCommentManipulator"/>
        <lang.implementationTextSelectioner language="Erlang" implementationClass="org.intellij.erlang.editor.ErlangImplementationTextSelectioner"/>

        <colorSettingsPage implementation="org.intellij.erlang.editor.ErlangColorSettingsPage"/>
        <lang.documentationProvider language="Erlang" implementationClass="org.intellij.erlang.documentation.ErlangDocumentationProvider"/>
        <lang.foldingBuilder language="Erlang" implementationClass="org.intellij.erlang.editor.ErlangFoldingBuilder"/>

        <sdkType implementation="org.intellij.erlang.sdk.ErlangSdkType"/>
        <compiler implementation="org.intellij.erlang.compilation.ErlangCompiler"/>
        <compileServer.plugin classpath="jps-plugin.jar"/>
        <!-- run -->
        <programRunner implementation="org.intellij.erlang.runconfig.ErlangRunner"/>
        <configurationType implementation="org.intellij.erlang.application.ErlangApplicationRunConfigurationType"/>
        <configurationProducer implementation="org.intellij.erlang.application.ErlangApplicationRunConfigurationProducer"/>

        <!--eunit -->
        <testFinder implementation="org.intellij.erlang.ErlangTestFinder"/>
        <configurationProducer implementation="org.intellij.erlang.eunit.ErlangUnitRunConfigurationProducer"/>
        <configurationType implementation="org.intellij.erlang.eunit.ErlangUnitRunConfigurationType"/>

        <!-- Tool Runners -->
        <configurationType implementation="org.intellij.erlang.console.ErlangConsoleRunConfigurationType"/>

        <codeStyleSettingsProvider implementation="org.intellij.erlang.formatter.settings.ErlangCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="org.intellij.erlang.formatter.settings.ErlangLanguageCodeStyleSettingsProvider"/>

        <moduleConfigurationEditorProvider implementation="org.intellij.erlang.configuration.DefaultModuleEditorsProvider" order="first"/>

        <codeInsight.lineMarkerProvider language="Erlang" implementationClass="org.intellij.erlang.marker.ErlangRecursiveCallLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Erlang" implementationClass="org.intellij.erlang.marker.ErlangBehaviourMarkerProvider"/>

        <codeInsight.parameterInfo language="Erlang" implementationClass="org.intellij.erlang.ErlangParameterInfoHandler"/>
        <codeInsight.gotoSuper language="Erlang" implementationClass="org.intellij.erlang.navigation.ErlangGotoSuperHandler"/>

        <fileBasedIndex implementation="org.intellij.erlang.ErlangSymbolIndex"/>
        <fileBasedIndex implementation="org.intellij.erlang.ErlangModuleIndex"/>
        <fileBasedIndex implementation="org.intellij.erlang.ErlangApplicationIndex"/>

        <gotoSymbolContributor implementation="org.intellij.erlang.go.ErlangSymbolContributor"/>

        <!--errors-->
        <localInspection language="Erlang" shortName="ErlangUnboundVariable" displayName="Unbound variable"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnboundVariableInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedRecord" displayName="Unresolved record"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedRecordInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedRecordField" displayName="Unresolved record field"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedRecordFieldInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedExportFunction" displayName="Unresolved export function"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedExportFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangIncorrectModuleName" displayName="Incorrect module name"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangIncorrectModuleNameInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedMacros" displayName="Unresolved macros"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedMacrosInspection"/>
        <localInspection language="Erlang" shortName="ErlangHeadMismatch" displayName="Head mismatch"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangHeadMismatchInspection"/>
        <localInspection language="Erlang" shortName="ErlangIncorrectAritySpecification" displayName="Incorrect arity in specification"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangIncorrectAritySpecificationInspection"/>
        <localInspection language="Erlang" shortName="ErlangSpecificationForUndefinedFunction" displayName="Specification for undefined function"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangSpecificationForUndefinedFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedInclude" displayName="Unresolved include"
                         groupName="Erlang" enabledByDefault="false" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedIncludeInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnresolvedIncludeLib" displayName="Unresolved include_lib"
                         groupName="Erlang" enabledByDefault="true" level="ERROR"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedIncludeLibInspection"/>

        <!--warnings-->
        <localInspection language="Erlang" shortName="ErlangUnresolvedFunction" displayName="Unresolved function"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnresolvedFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnusedVariable" displayName="Unused variable"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnusedVariableInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnusedFunction" displayName="Unused function"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnusedFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangUnusedType" displayName="Unused type"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangUnusedTypeInspection"/>
        <localInspection language="Erlang" shortName="ErlangDuplicateFunction" displayName="Duplicate function"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangDuplicateFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangIoFormat" displayName="io:format"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangIoFormatInspection"/>
        <localInspection language="Erlang" shortName="ErlangUndefinedCallbackFunction" displayName="Undefined callback function"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangUndefinedCallbackFunctionInspection"/>
        <localInspection language="Erlang" shortName="ErlangDialyzerInspection" displayName="Dialyzer based inspections"
                         groupName="Erlang" enabledByDefault="false" level="WARNING"
                         implementationClass="org.intellij.erlang.dialyzer.ErlangDialyzerInspection"/>
        <localInspection language="Erlang" shortName="ErlangFacetConfigurationIssue" displayName="Facet configuration issues"
                         groupName="Erlang" enabledByDefault="true" level="WARNING"
                         implementationClass="org.intellij.erlang.inspection.ErlangFacetConfigurationIssueInspection"/>
        <externalAnnotator language="Erlang" implementationClass="org.intellij.erlang.dialyzer.ErlangDialyzerExternalAnnotator"/>

        <spellchecker.bundledDictionaryProvider implementation="org.intellij.erlang.spellchecker.ErlangBundledDictionaryProvider"/>

        <intentionAction>
          <className>org.intellij.erlang.intention.ErlangExportFunctionIntention</className>
          <category>Erlang</category>
        </intentionAction>
        <intentionAction>
          <className>org.intellij.erlang.intention.ErlangExportTypeIntention</className>
          <category>Erlang</category>
        </intentionAction>
    </extensions>
    <actions>
        <action id="Erlang.NewErlangFile" class="org.intellij.erlang.actions.CreateErlangFileAction"
                text="Erlang File" description="Create new Erlang file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="org.intellij.erlang.actions.ErlangEmacsFormatAction"
                class="org.intellij.erlang.actions.ErlangEmacsFormatAction" text="Reformat code with Emacs"
                description="Format current file with external Emacs formatter">
            <add-to-group group-id="CodeFormatGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl alt E"/>
        </action>
        <action id="Erlang.SendSelectionToConsole"
                class="org.intellij.erlang.console.SendSelectionToErlangConsoleAction"
                text="Send Selection to Erlang Console"
                description="Send selection to be executed in an open Erlang Console">
            <add-to-group group-id="RunContextPopupGroup" anchor="last"/>
            <keyboard-shortcut first-keystroke="ctrl shift X" keymap="$default"/>
        </action>
        <action id="ErlangConsole.Execute"
                class="org.intellij.erlang.console.ErlangConsoleExecuteAction">
            <keyboard-shortcut first-keystroke="ctrl ENTER" keymap="$default"/>
        </action>

        <group id="EunitGenerateGroup">
            <action id="EUnitGenerateTestMethod" class="org.intellij.erlang.eunit.generation.ErlangUnitTestMethodAction"
                    text="EUnit Test Method"
                    description="Creates EUnit test function"/>
            <separator/>
            <add-to-group group-id="GenerateGroup" anchor="first"/>
        </group>

    </actions>
</idea-plugin>
